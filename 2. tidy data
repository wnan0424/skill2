1. using tidyr 
library(tidyr) 
#gather 
gather(students, sex, count, -grade)
gather(class, grade, class1:class5, na.rm = TRUE) 

#separate
separate(data = res, col = sex_class, into = c("sex", "class"))

#spread
spread(test, grade)

#parse_number
library(readr)
parse_number("class5")

#unique
unique(student4)



week 4 
1. editing text variables 
names(cameraData)
tolower(names(cameraData)  #lowercase all letters
toupper(names()) #oppsise

splitnames <- strsplit(names(cameraData), "\\.") # split the "."
firstElement <- function(x){x[1]} 
sapply(splitnames, firstElement) 

sub("_","",names(reviews),) #remove first "_" 
gsub("_","",names(reviews),)  #remove mutiple "_"
substr("jeffrey leek",1,7) # get the 1 to 7 characters of the strings 

paste("jeffrey", "leek", sep = "-")  # get space in between without sep. 
paste0("jeffrey","leek") # get "jeffreyleek"

grep("Alameda", cameraData$intersection) # finding values, return the location(which) 
grepl("Alameda", cameraData$intersection) #return the logical vector 
grep("Alameda", cameraData$intersection, value =T)#return the original strings 

library(stringr) 
nchar("jeffrey leek") #return the number of appear time 

str_trim("jeff    ") #get "jeff"



2. regular expressions
^i think #represents the first 
moring$ #represents the end of a line
[Bb][Uu][Ss][Hh]
^[Ii] am 
^[0-9][a-zA-Z]  # get  "7th..."
[^?.]$  #means all line ending by "? and ." will be delete
9.11  #refer to any character 9-11, 9:11 911 9/11
flood|fire # any line has either of flood and fire.
^[Gg]ood | [Bb]ad 
^([Gg]ood | [Bb]ad )
[Gg]eorge( [Ww]\.)? [Bb]ush # question mark indicates   optional. 
\. # means it is literal dot rather than a metacharacter.
(.*) #anything in the ()
[0-9]+ (.*) [0-9]+  # 720 dhvnef 43; 23 or 433; 
[Bb]ush( +[^ ]+ +){1,5} debate
 +([a-zA-Z]+) +\1 + # so so ; blah blah 
 
 3. about date 
d1 <- Sys.Date()
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")

format(d2, "%a %b %d") #formatting dates
weekdays(d2)   #get "sunday"
julian(d2)  # get detial 

x <- c("1jan1960","2jan1960"); z <- as.Date(x, "%d%b%Y) 
z[1] - z[2]
wday(x[1])  # get 3 
wday(x[1], label =T) get Tues 

library(lubridate)
ymd("20140108")
dmy("03-04-2013") 
ymd_hms("2011-08-03 10:15:03", tz = "Pacific/Auckland") 

4. DATA resources 
gapminder 
survey data asdfree.com 
infochimps marketplace infochimps.com/marketplace
kaggle kaggle.com 

5.SWIRL DATE 
library(lubridate) 
Sys.getlocale("LC_TIME") 
help(package = lubridate)
year(this_day) #hour(), minute(), and second()
wday(this_day, label = T)
Levels: Sun < Mon < Tue < Wed < Thu < Fri < Sat
this_moment <- now()
my_date<- ymd("1989-05-17")
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
hms("03:22:14")
update(this_moment, hours = 8, minutes = 34, seconds = 55)
nyc <- now("America/New_York")
depart <- nyc + days(2)
arrive <- depart + hours(15)+minutes(50)
with_tz(arrive, tzone = "Asia/Hong_Kong")
last_time <- mdy("June 17, 2008", tz= "Singapore")
how_long <- interval(last_time, arrive)
timer
stopwatch()
as.period(how_long)
