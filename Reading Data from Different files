#read excel 
library(xlsx)
data <- read.xlsx("data.xlsx", header = T, SheetIndex = 1, colIndex =1:3, rowIndex = 1:5 )
XLconnect 
write.xlsx



#read xml
library(XML)
URL<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(URL, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
## [1] "response"
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
length(zips[which(zips=="21231")])



#reading from MySQL 
ucscDb <- dbConnect(MySQL(),user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);

hg19 <- dbConnect(MySQL(),user = "genome",db = "hg19", host = "genome-mysql.cse.ucsc.edu")
alltable <- dblistTables(hg19)
length(alltable)
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affydata <- dbReadTable(hg19, "affyU133Plus2")

query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)

affyMisSmall <- fetch(query, n=10); dbClearResult(query);
dbDisconnect(hg19)


# Reading from HDF5 
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")

library(rhdf5)
created = h5createFile("example.h5")
created

created = h5createGroup("example.h5","foo")
created = h5createGroup("example.h5","baa")
created = h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")

A <- matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5","foo/A")
B <- array(seq(0.1, 2.0, by=0.1), dim = c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")

df <- data.frame(1L:5L, seq(0,1, length.out = 5), c("ab","cde","fghi","a","s"), stringsAsFactors=FALSE)
h5write(df, "example.h5","df")
h5ls("example.h5")

readA <- h5read("example.h5","foo/A")
readB <- h5read("example.h5","foo/foobaa/B")
readdf <- h5read("example.h5","df")

h5write(c(12,13,14), "example.h5","foo/A", index = list(1:3,1))
h5read("example.h5","foo/A")



# READING FROM WEBSITES 
library(XML)
url <- "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes =T )
xpathSApply(html, "//title",xmlValue)
xpathSApply(html, "//td[@id='col-citedby']",xmlValue)

library(httr)
html2 <- GET(url)
content2 <- content(html2, as= "text")
parsedHtml <- htmlParse(content2, asText =T )
xpathSApply(parsedHtml, "//title", xmlValue)

#need passwords
pg2 <- GET("http://.../passwd", authenticate("user","passwd"))
pg2 

#using handles
google <- handle("http://google.com")
pg1 <- GET(handle = google, path ="/")
pg2 <- GET(handle = google, path ="serch")
